if command -v starship &> /dev/null; then
  eval "$(starship init zsh)"
fi

if command -v mise &> /dev/null; then
  eval "$(mise activate zsh)"
fi

if command -v sheldon &> /dev/null; then
  eval "$(sheldon source)"
fi

# Compression
compress() { tar -czf "${1%/}.tar.gz" "${1%/}"; }
alias decompress="tar -xzf"

# Convert webm files generated by the Gnome screenshot video recorder to mp4s that are more compatible
webm2mp4() {
  input_file="$1"
  output_file="${input_file%.webm}.mp4"
  ffmpeg -i "$input_file" -c:v libx264 -preset slow -crf 22 -c:a aac -b:a 192k "$output_file"
}

alias bat='batcat'
alias less='batcat --paging always'
alias ls='exa'
alias ll='ls -l'
alias la='ls -a'
alias lla='ls -la'
alias lt='ls --tree'
alias vi='nvim'
alias gg='lazygit'
alias tf='terraform'
alias k='kubectl'
alias kn='kubie ns'
alias kx='kubie ctx'
alias pbcopy='xsel --clipboard --input'

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
[ -f ~/.gcloud.zsh ] && source ~/.gcloud.zsh
[ -f ~/.zshrc.local ] && source ~/.zshrc.local

# Gitリポジトリに移動する(ghq list > cd)
cd-fzf-ghqlist() {
    local GHQ_ROOT=`ghq root`
    local REPO=`ghq list -p | sed -e 's;'${GHQ_ROOT}/';;g' |fzf +m`
    if [ -n "${REPO}" ]; then
        BUFFER="cd ${GHQ_ROOT}/${REPO}"
    fi
    zle accept-line
}
zle -N cd-fzf-ghqlist

# ghq projectをZellij Sessionで開く
prj () {
    local GHQ_ROOT=`ghq root`
    local repo_path=`ghq list -p | sed -e 's;'${GHQ_ROOT}/';;g' |fzf +m`
    if [ -z "${repo_path}" ]; then
      return
    fi

  if [ -f "${GHQ_ROOT}/${repo_path}/.workspace.kdl" ]; then
    local layout="${GHQ_ROOT}/${repo_path}/.workspace.kdl"
  else 
    local layout="default"
  fi
  local session_name=$(echo "$(basename $(dirname $repo_path))/$(basename $repo_path)" | sed -e 's/\.\|\//_/g')

  zellij a $session_name --create-background -c options --default-cwd ${GHQ_ROOT}/${repo_path} --default-layout $layout
  zellij pipe --plugin file:~/.config/zellij/plugins/zellij-switch.wasm -- "--session ${session_name}"
}

# Gitブランチを切り替えする(git branch > git checkout)
function checkout-fzf-gitbranch() {
    local GIT_BRANCH=$(git branch --all | grep -v HEAD | fzf +m)
    if [ -n "$GIT_BRANCH" ]; then
        git checkout $(echo "$GIT_BRANCH" | sed "s/.* //" | sed "s#remotes/[^/]*/##")
    fi
    zle accept-line
}
zle -N checkout-fzf-gitbranch

# Gitブランチ指定を楽にする
alias -g B='`git branch --all | grep -v HEAD | fzf -m | sed "s/.* //" | sed "s#remotes/[^/]*/##"`'

# コマンド履歴(history > コマンドラインバッファー)
function buffer-fzf-history() {
    local HISTORY=$(history -n -r 1 | fzf +m)
    BUFFER=$HISTORY
    if [ -n "$HISTORY" ]; then
        CURSOR=$#BUFFER
    else
        zle accept-line
    fi
}
zle -N buffer-fzf-history

# 登録サーバにSSH(cat ~/.ssh/config > ssh)
function ssh-fzf-sshconfig() {
    local SSH_HOST=$(awk '
        tolower($1)=="host" {
            for (i=2; i<=NF; i++) {
                if ($i !~ "[*?]") {
                    print $i
                }
            }
        }
    ' ~/.ssh/config | sort | fzf +m)
    if [ -n "$SSH_HOST" ]; then
        BUFFER="ssh $SSH_HOST"
    fi
    zle accept-line
}
zle -N ssh-fzf-sshconfig

bindkey '^G' cd-fzf-ghqlist
bindkey '^R' buffer-fzf-history
bindkey '^O' checkout-fzf-gitbranch
bindkey '^\' ssh-fzf-sshconfig

# for pyenv
export PYENV_ROOT="$HOME/.pyenv"
[[ -d $PYENV_ROOT/bin ]] && export PATH="$PYENV_ROOT/bin:$PATH"
eval "$(pyenv init -)"
#eval "$(pyenv virtualenv-init -)"

# for lazygit
export XDG_CONFIG_HOME="$HOME/.config"

# for omakub
export OMAKUB_PATH="/home/$USER/.local/share/omakub"
alias omakub='bash $OMAKUB_PATH/bin/omakub'

. "$HOME/.atuin/bin/env"

eval "$(atuin init zsh)"
